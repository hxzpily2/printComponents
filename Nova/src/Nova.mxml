<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:view="com.nova.print.view.*"
			   minWidth="955" minHeight="600" creationComplete="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.nova.print.control.NovaText;
			import com.nova.print.doc.PrintContinuous;
			import com.nova.print.doc.PrintDoc;
			import com.nova.print.event.PrintEvents;
			import com.nova.print.map.DataMap;
			import com.nova.print.map.LayoutMap;
			import com.nova.print.map.PrintDataMap;
			import com.nova.print.util.PrintUtil;
			import com.nova.print.util.SetupInfo;
			import com.nova.print.view.Page;
			import com.nova.print.view.Work;
			
			import flashx.textLayout.formats.TextAlign;
			
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.graphics.ImageSnapshot;
			private var setting:XML=null;
			private var layoutXml:XML=null;
			private var dataXml:XML=null;
			private var work:Work=null;
			[Embed(source="assets/font/SIMSUN.TTC", fontFamily="SONG", mimeType="application/x-font",embedAsCFF= "false")]
			public var SONG:Class;   
			
			
			
			
			/**
			 * 区分是哪个版本
			 * 0 为发布版
			 * 1为测试版
			 *   */
			private var VERSION:int=0;
			
			private function init():void
			{
				
				PrintUtil.getSimple().addEventListener(PrintEvents.PrintChange,layoutCompleteHandler);
				PrintUtil.getSimple().startLoad(VERSION);
			}
			
			/**
			 * 发布版
			 *   */
			private function releaseVersion():void
			{
				ExternalInterface.addCallback("getLayout",getLayout);
				ExternalInterface.addCallback("getData",getData);
				ExternalInterface.addCallback("getProperties",getProperties);
				ExternalInterface.call("creationComplete","");
			}
			/**
			 * 布局版
			 * */
			private function layoutVersion():void
			{
				layoutXml=PrintUtil.getSimple().layoutXml;
				setting=PrintUtil.getSimple().settingXml;
				dataXml=PrintUtil.getSimple().dataXml;
				getLayout(layoutXml);
				getData(dataXml);
				getProperties(setting);
			}
			private function layoutCompleteHandler(event:PrintEvents):void
			{
				
				if(VERSION==0)
				{
					trace(PrintUtil.getSimple().coverSetXml);
					releaseVersion();
				}
				else
				{
					layoutVersion();
				}
				
			}
			
			/** 
			 * 打印来自设计局设计的mxml页面  保存所有的界面xml
			 *   */
			private function getLayout(_designerXml:String):void
			{
				var xml:XML=new XML(_designerXml);
				LayoutMap.getSimple().setLayout(xml);
			}
			/**
			 * 获取打印数据
			 *   */
			private function getData(_printData:String):void
			{
				var xml:XML=new XML(_printData);
				DataMap.getSimple().setData(xml);
			}
			/**
			 * 获取打印设置
			 *   */
			private function getProperties(_properties:String):void
			{
				if(_properties!="")
				{
					SetupInfo.getInstance().getProperties(new XML(_properties));
				}
				else
				{
					SetupInfo.getInstance().gotoPropertiesDefault();
				}
				work=new Work();
				this.addElement(work);
			}
			/**
			 * 获取连打数据
			 *   */
			private function getContinuousXmls(_continuous:XML):void
			{
				PrintContinuous.getPc().loadAllXml(new XML(_continuous));
			}
		]]>
	</fx:Script>
	
</s:Application>
